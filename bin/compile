#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# debug
# set -x

shopt -s extglob

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


# parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2

BIN_PATH="$BUILD_DIR/bin"
TMP_PATH="$BUILD_DIR/tmp"
mkdir -p $CACHE_DIR $BIN_PATH $TMP_PATH

JULIA_VERSION="0.4.6"
S3_BUCKET="julialang"
JULIA_URL="http://${S3_BUCKET}.s3.amazonaws.com/bin/linux/x64/0.4/julia-${JULIA_VERSION}-linux-x86_64.tar.gz"
# https://julialang.s3.amazonaws.com/bin/linux/x64/0.4/julia-0.4.6-linux-x86_64.tar.gz
JULIA_BINARIES="$CACHE_DIR/julia_${JULIA_VERSION}.tar.gz"
JULIA_PATH="$TMP_PATH/julia"

if [ -f $JULIA_BINARIES ]; then
  echo "Using Julia binaries from cache" | indent
else
  echo "Downloading binaries ($JULIA_URL)" | indent
  curl -L $JULIA_URL -o $JULIA_BINARIES 
fi

echo "Unpacking binaries" | indent
tar xzf $JULIA_BINARIES -C $BUILD_DIR

# rm -rf $JULIA_PATH

echo "Creating runtime environment" | indent
mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\$HOME/julia-2ac304dfba/bin:\$PATH" >> $BUILD_DIR/.profile.d/julia_paths.sh

echo "Installing packages" | indent
cd $BUILD_DIR
julia-2ac304dfba/bin/julia package.jl
mv ~/.julia ./

echo "Julia successfully installed" | indent



julia -e 'Pkg.init(); Pkg.update()'
julia -e 'Pkg.add("HttpServer")'
julia -e 'Pkg.add("HttpCommon")'
julia -e 'Pkg.add("JSON")'
julia -e 'Pkg.add("XMLDict")'
#julia -e 'Pkg.clone("git://github.com/codeneomatrix/Merly.jl.git")'


#julia -e 'Pkg.add("WebSockets")'
#julia -e 'Pkg.add("Mongo")'
#julia -e 'Pkg.add("Mux")'
#julia -e 'Pkg.add("BayesNets")'
#julia -e 'Pkg.add("Cairo")'
#julia -e 'Pkg.add("Clp")'
#julia -e 'Pkg.add("Clustering")'
#julia -e 'Pkg.add("DataFrames")'
#julia -e 'Pkg.add("DataStructures")'
#julia -e 'Pkg.add("Distributions")'
#julia -e 'Pkg.add("GLM")'
#julia -e 'Pkg.add("GLPKMathProgInterface")'
#julia -e 'Pkg.add("Gadfly")'
#julia -e 'Pkg.add("GraphLayout")'
#julia -e 'Pkg.add("GraphViz")'
#julia -e 'Pkg.add("HDF5")'
#julia -e 'Pkg.add("IJulia")'
#julia -e 'Pkg.add("ImageView")'
#julia -e 'Pkg.add("Images")'
#julia -e 'Pkg.add("Interact")'
#julia -e 'Pkg.add("Ipopt")'
#julia -e 'Pkg.add("Iterators")'
#julia -e 'Pkg.add("JuMP")'
#julia -e 'Pkg.add("Lazy")'
#julia -e 'Pkg.add("LinearLeastSquares")'
#julia -e 'Pkg.add("MAT")'
#julia -e 'Pkg.add("NLopt")'
#julia -e 'Pkg.add("NumericExtensions")'
#julia -e 'Pkg.add("ODE")'
#julia -e 'Pkg.add("Optim")'
#julia -e 'Pkg.add("PGFPlots")'
#julia -e 'Pkg.add("Patchwork")'
#julia -e 'Pkg.add("PyPlot")'
#julia -e 'Pkg.add("Quandl")'
#julia -e 'Pkg.add("QuantEcon")'
#julia -e 'Pkg.add("RDatasets")'
#julia -e 'Pkg.add("Roots")'
#julia -e 'Pkg.add("SIUnits")'
#julia -e 'Pkg.add("SVM")'
#julia -e 'Pkg.add("Stan")'
#julia -e 'Pkg.add("Sundials")'
#julia -e 'Pkg.add("SymPy")'
#julia -e 'Pkg.add("WAV")'

#julia -e 'Pkg.add("ArrayViews")'
#julia -e 'Pkg.add("Benchmark")'
#julia -e 'Pkg.add("BinDeps")'
#julia -e 'Pkg.add("Blosc")'
#julia -e 'Pkg.add("Calculus")'
#julia -e 'Pkg.add("Cbc")'
#julia -e 'Pkg.add("Codecs")'
#julia -e 'Pkg.add("Color")'
#julia -e 'Pkg.add("Compat")'
#julia -e 'Pkg.add("Compose")'
#julia -e 'Pkg.add("Contour")'
#julia -e 'Pkg.add("DSP")'
#julia -e 'Pkg.add("DataArrays")'
#julia -e 'Pkg.add("Dates")'
#julia -e 'Pkg.add("Distances")'
#julia -e 'Pkg.add("Docile")'
#julia -e 'Pkg.add("DualNumbers")'
#julia -e 'Pkg.add("FactCheck")'
#julia -e 'Pkg.add("FixedPointNumbers")'
#julia -e 'Pkg.add("FunctionalCollections")'
#julia -e 'Pkg.add("GLPK")'
#julia -e 'Pkg.add("GZip")'
#julia -e 'Pkg.add("GnuTLS")'
#julia -e 'Pkg.add("Graphics")'
#julia -e 'Pkg.add("Graphs")'
#julia -e 'Pkg.add("Grid")'
#julia -e 'Pkg.add("Hexagons")'
#julia -e 'Pkg.add("HttpCommon")'
#julia -e 'Pkg.add("HttpParser")'
#julia -e 'Pkg.add("ImmutableArrays")'
#julia -e 'Pkg.add("IniFile")'
#julia -e 'Pkg.add("JSON")'
#julia -e 'Pkg.add("KernelDensity")'
#julia -e 'Pkg.add("LaTeXStrings")'
#julia -e 'Pkg.add("Loess")'
#julia -e 'Pkg.add("Mamba")'
#julia -e 'Pkg.add("MathProgBase")'
#julia -e 'Pkg.add("NaNMath")'
#julia -e 'Pkg.add("Nettle")'
#julia -e 'Pkg.add("NumericFuns")'
#julia -e 'Pkg.add("PDMats")'
#julia -e 'Pkg.add("Polynomials")'
#julia -e 'Pkg.add("PowerSeries")'
#julia -e 'Pkg.add("PyCall")'
#julia -e 'Pkg.add("REPLCompletions")'
#julia -e 'Pkg.add("Reactive")'
#julia -e 'Pkg.add("Reexport")'
#julia -e 'Pkg.add("Requests")'
#julia -e 'Pkg.add("Requires")'
#julia -e 'Pkg.add("ReverseDiffSparse")'
#julia -e 'Pkg.add("SHA")'
#julia -e 'Pkg.add("Showoff")'
#julia -e 'Pkg.add("SortingAlgorithms")'
#julia -e 'Pkg.add("StatsBase")'
#julia -e 'Pkg.add("TexExtensions")'
#julia -e 'Pkg.add("TikzGraphs")'
#julia -e 'Pkg.add("TikzPictures")'
#julia -e 'Pkg.add("TimeSeries")'
#julia -e 'Pkg.add("Tk")'
#julia -e 'Pkg.add("URIParser")'
#julia -e 'Pkg.add("Winston")'
#julia -e 'Pkg.add("ZMQ")'
#julia -e 'Pkg.add("Zlib")'

